{"version":3,"sources":["firebase.config.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","handleChange","e","target","name","value","handleSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","onSubmit","type","placeholder","required","onChange","onClick","prev","Auth","onSocialClick","event","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","update","src","width","height","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","collection","add","createdAt","Date","now","creatorId","maxLength","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","Home","nweetList","setNweetList","useEffect","onSnapshot","snapshot","newArray","docs","map","document","data","Profile","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","displayName","updateProfile","signOut","push","Navigation","to","AppRouter","isLoggedIn","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.137bca58.chunk.js","sourcesContent":["import firebase from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/firestore'\nimport 'firebase/storage'\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID\n}\n\nfirebase.initializeApp(firebaseConfig)\n\n\nexport const firebaseInstance = firebase\nexport const authService = firebase.auth()\nexport const dbService = firebase.firestore()\nexport const storageService = firebase.storage()","import { authService } from 'firebase.config'\nimport React, { useState } from 'react'\n\n\nconst AuthForm = () => {\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [newAccount, setNewAccount] = useState(true)\n    const [error, setError] = useState('')\n\n    const handleChange = e => {\n        const {\n            target: { name, value },\n        } = e\n        if (name === 'email') {\n            setEmail(value)\n        } else if (name === 'password') {\n            setPassword(value)\n        }\n    }\n\n    const handleSubmit = async e => {\n        e.preventDefault()\n        try {\n            let data;\n            if (newAccount) {\n                // create newAccount\n                data = await authService.createUserWithEmailAndPassword(email, password)\n            } else {\n                // log in\n                data = await authService.signInWithEmailAndPassword(email, password)\n            }\n        }\n        catch (error) {\n            setError(error.message)\n        }\n\n    }\n\n    const toggleAccount = () => setNewAccount((prev) => !prev)\n    return (\n        <>\n            <form onSubmit={handleSubmit}>\n                <input\n                    name='email'\n                    type='email'\n                    placeholder='Email'\n                    required\n                    value={email}\n                    onChange={handleChange}\n                />\n                <input\n                    name='password'\n                    type='password'\n                    placeholder='Password'\n                    required\n                    value={password}\n                    onChange={handleChange}\n                />\n                <input type='submit' value={newAccount ? 'Create Account' : 'Log In'} />\n                <div>{error}</div>\n            </form>\n            <span onClick={toggleAccount}>\n                {newAccount ? 'Sign In' : 'Create Account'}\n            </span>\n        </>\n    )\n}\n\nexport default AuthForm\n","import React from 'react'\nimport { authService, firebaseInstance } from 'firebase.config'\nimport AuthForm from 'components/AuthForm'\n\nconst Auth = () => {\n\n    const onSocialClick = async event => {\n        const {\n            target: { name },\n        } = event\n        let provider\n        if (name === 'google') {\n            provider = new firebaseInstance.auth.GoogleAuthProvider()\n        } else if (name === 'github') {\n            provider = new firebaseInstance.auth.GithubAuthProvider()\n        }\n        const data = await authService.signInWithPopup(provider)\n    }\n\n    return (\n        <div>\n            <AuthForm />\n            <div>\n                <button onClick={onSocialClick} name='google'>Continue with Google</button>\n                <button onClick={onSocialClick} name='github'>Continue with Github</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Auth\n","import { dbService, storageService } from \"firebase.config\";\nimport { useState } from \"react\";\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\n\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"삭제하시겠습니까?\");\n    if (ok) {\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\n      if(nweetObj.attachmentUrl !== ''){\n          await storageService.refFromURL(nweetObj.attachmentUrl).delete()\n      }\n    }\n  };\n\n  const toggleEditing = () => setEditing((prev) => !prev);\n\n  const onChange = (event) =>{\n      const {\n          target: {value},\n      } = event\n      setNewNweet(value)\n  }\n\n  const onSubmit = async (event) => {\n      event.preventDefault()\n      await dbService.doc(`nweets/${nweetObj.id}`).update({text: newNweet})\n      setEditing(false)\n  }\n\n  return (\n    <div>\n      {editing ? (\n        <>\n          <form onSubmit={onSubmit}>\n              <input onChange={onChange} value={newNweet} required />\n              <input type='submit' value='Update Nweet'/>\n          </form>\n          <button onClick={toggleEditing}>Cancel</button>\n        </>\n      ) : (\n        <>\n          <h4>{nweetObj.text}</h4>\n          {nweetObj.attachmentUrl && (\n              <img src={nweetObj.attachmentUrl} width = '50px' height='50px'/>\n          )}\n          {isOwner && (\n            <>\n              <button onClick={onDeleteClick}>Delete</button>\n              <button onClick={toggleEditing}>Edit Nweet</button>\n            </>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Nweet;\n","import { dbService, storageService } from \"firebase.config\";\nimport { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\n\n\nconst NweetFactory = ({ userObj }) => {\n    const [nweet, setNweet] = useState(\"\");\n    const [attachment, setAttachment] = useState(\"\");\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        let attachmentUrl = ''\n        if (attachment !== '') {\n            const attachmentRef = storageService\n                .ref()\n                .child(`${userObj.uid}/${uuidv4()}`)\n            const response = await attachmentRef.putString(attachment, 'data_url')\n            attachmentUrl = await response.ref.getDownloadURL()\n        }\n\n        await dbService.collection(\"nweets\").add({\n            text: nweet,\n            createdAt: Date.now(),\n            creatorId: userObj.uid,\n            attachmentUrl\n        });\n        setNweet(\"\");\n        setAttachment(\"\");\n    };\n\n    const onChange = (event) => {\n        event.preventDefault();\n        const {\n            target: { value },\n        } = event;\n        setNweet(value);\n    };\n\n    const onFileChange = (event) => {\n        const {\n            target: { files },\n        } = event;\n        const theFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => {\n            const {\n                currentTarget: { result },\n            } = finishedEvent;\n            setAttachment(result)\n        };\n        reader.readAsDataURL(theFile);\n    };\n\n    const onClearAttachment = () => setAttachment('')\n\n    return (\n        <form onSubmit={onSubmit}>\n            <input\n                value={nweet}\n                onChange={onChange}\n                type='text'\n                placeholder=\"What's on your mind?\"\n                maxLength={120}\n            />\n            <input type='file' accept='image/*' onChange={onFileChange} />\n            <input type='submit' value='Nweet' />\n            {attachment && (<div>\n                <img src={attachment} width='50px' height='50px' />\n                <button onClick={onClearAttachment}>Clear</button>\n            </div>)}\n        </form>\n    )\n}\n\nexport default NweetFactory","import React, { useEffect, useState } from \"react\";\nimport { dbService } from \"firebase.config\";\nimport Nweet from \"components/Nweet\";\nimport NweetFactory from \"components/NweetFactory\";\n\nconst Home = ({ userObj }) => {\n\n  const [nweetList, setNweetList] = useState([]);\n\n  useEffect(() => {\n    dbService.collection(\"nweets\").onSnapshot((snapshot) => {\n      const newArray = snapshot.docs.map((document) => ({\n        id: document.id,\n        ...document.data(),\n      }));\n      setNweetList(newArray);\n    });\n  }, []);\n\n  return (\n    <>\n      <NweetFactory userObj={userObj} />\n      <div>\n        {nweetList.map((nweet) => (\n          <Nweet\n            key={nweet.id}\n            nweetObj={nweet}\n            isOwner={nweet.creatorId === userObj.uid}\n          />\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default Home;\n","import React, { useState, useEffect } from 'react'\nimport { authService, dbService } from 'firebase.config'\nimport { useHistory } from 'react-router'\n\nconst Profile = ({ userObj, refreshUser }) => {\n    const history = useHistory()\n    const [newDisplayName, setNewDisplayName] = useState(userObj.newDisplayName)\n\n    const onLogOutClick = () => {\n        authService.signOut()\n        history.push('/')\n    }\n\n    const onChange = (event) => {\n        const {\n            target: { value },\n        } = event\n        setNewDisplayName(value)\n    }\n\n    const onSubmit = async (event) => {\n        event.preventDefault()\n        if (userObj.displayName !== newDisplayName) {\n            await userObj.updateProfile({ displayName: newDisplayName })\n            refreshUser()\n        }\n    }\n\n    return (\n        <>\n            <form onSubmit={onSubmit}>\n                <input\n                    onChange={onChange}\n                    type='text'\n                    placeholder='Display name'\n                    value={newDisplayName}\n                />\n                <input type='submit' value='Update Profile' />\n            </form>\n            <button onClick={onLogOutClick}>Log Out</button>\n        </>\n    )\n}\n\nexport default Profile\n","import { Link } from 'react-router-dom'\n\nconst Navigation = ({ userObj }) => {\n    return (\n        <nav>\n            <ul>\n                <li>\n                    <Link to='/'>Home</Link>\n                </li>\n                <li>\n                    <Link to='/profile'>{userObj.displayName}의 Profile</Link>\n                </li>\n            </ul>\n        </nav>\n    )\n}\n\nexport default Navigation\n","import { HashRouter as Router, Route, Switch } from 'react-router-dom'\nimport Auth from 'routes/Auth'\nimport Home from 'routes/Home'\nimport Profile from '../routes/Profile'\nimport Navigation from './Navigation'\n\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\n    return (\n        <Router>\n            {isLoggedIn && <Navigation userObj={userObj} />}\n            <Switch>\n                {\n                    isLoggedIn ? (\n                        <>\n                            <Route exact path='/'>\n                                <Home userObj={userObj} />\n                            </Route>\n                            <Route exact path='/profile'>\n                                <Profile refreshUser={refreshUser} userObj={userObj} />\n                            </Route>\n                        </>\n                    ) : (\n                        <Route exact path='/'>\n                            <Auth />\n                        </Route>\n                    )\n                }\n            </Switch>\n        </Router>\n    )\n}\n\nexport default AppRouter\n","import { useEffect, useState } from 'react'\nimport AppRouter from 'components/Router'\nimport { authService } from 'firebase.config'\n\n\nfunction App() {\n  const [init, setInit] = useState(false)\n  const [userObj, setUserObj] = useState(null)\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          uid: user.uid,\n          displayName: user.displayName,\n          updateProfile: (args) => user.updateProfile(args)\n        })\n      } else {\n        setUserObj(false)\n      }\n      setInit(true)\n    })\n  }, [])\n\n  const refreshUser = () => {\n    const user = authService.currentUser\n    setUserObj({\n      uid: user.uid,\n      displayName: user.displayName,\n      updateProfile: (args) => user.updateProfile(args)\n    })\n  }\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        'initializing...'\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}