{"version":3,"sources":["firebase.config.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","handleChange","e","target","name","value","handleSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","onSubmit","className","type","placeholder","required","onChange","onClick","prev","Auth","onSocialClick","event","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","update","autoFocus","src","width","height","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","collection","add","createdAt","Date","now","creatorId","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","Boolean","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweetList","setNweetList","useEffect","orderBy","onSnapshot","snapshot","newArray","docs","map","document","data","marginTop","Profile","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","displayName","updateProfile","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","margin","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.202cdff9.chunk.js","sourcesContent":["import firebase from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/firestore'\nimport 'firebase/storage'\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID\n}\n\nfirebase.initializeApp(firebaseConfig)\n\n\nexport const firebaseInstance = firebase\nexport const authService = firebase.auth()\nexport const dbService = firebase.firestore()\nexport const storageService = firebase.storage()","import { authService } from 'firebase.config'\nimport React, { useState } from 'react'\n\n\nconst AuthForm = () => {\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [newAccount, setNewAccount] = useState(true)\n    const [error, setError] = useState('')\n\n    const handleChange = e => {\n        const {\n            target: { name, value },\n        } = e\n        if (name === 'email') {\n            setEmail(value)\n        } else if (name === 'password') {\n            setPassword(value)\n        }\n    }\n\n    const handleSubmit = async e => {\n        e.preventDefault()\n        try {\n            let data;\n            if (newAccount) {\n                // create newAccount\n                data = await authService.createUserWithEmailAndPassword(email, password)\n            } else {\n                // log in\n                data = await authService.signInWithEmailAndPassword(email, password)\n            }\n        }\n        catch (error) {\n            setError(error.message)\n        }\n\n    }\n\n    const toggleAccount = () => setNewAccount((prev) => !prev)\n    return (\n        <>\n            <form onSubmit={handleSubmit} className='container'>\n                <input\n                    name='email'\n                    type='email'\n                    placeholder='Email'\n                    required\n                    value={email}\n                    onChange={handleChange}\n                    className='authInput'\n                />\n                <input\n                    name='password'\n                    type='password'\n                    placeholder='Password'\n                    required\n                    value={password}\n                    onChange={handleChange}\n                    className='authInput'\n                />\n                <input\n                    type='submit'\n                    value={newAccount ? 'Create Account' : 'Log In'}\n                    className='authInput authSubmit'\n                />\n                <div>{error && <span className='authError'>{error}</span>}</div>\n            </form>\n            <span onClick={toggleAccount} className='authSwitch'>\n                {newAccount ? 'Sign In' : 'Create Account'}\n            </span>\n        </>\n    )\n}\n\nexport default AuthForm\n","import React from 'react'\nimport { authService, firebaseInstance } from 'firebase.config'\nimport AuthForm from 'components/AuthForm'\nimport {\n  faTwitter,\n  faGoogle,\n  faGithub,\n} from '@fortawesome/free-brands-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nconst Auth = () => {\n\n  const onSocialClick = async event => {\n    const {\n      target: { name },\n    } = event\n    let provider\n    if (name === 'google') {\n      provider = new firebaseInstance.auth.GoogleAuthProvider()\n    } else if (name === 'github') {\n      provider = new firebaseInstance.auth.GithubAuthProvider()\n    }\n    const data = await authService.signInWithPopup(provider)\n  }\n\n  return (\n    <div className='authContainer'>\n      <FontAwesomeIcon\n        icon={faTwitter}\n        color={'#04AAFF'}\n        size='3x'\n        style={{ marginBottom: 30 }}\n      />\n      <AuthForm />\n      <div className='authBtns'>\n        <button onClick={onSocialClick} name='google' className='authBtn'>Continue with Google <FontAwesomeIcon icon={faGoogle} /></button>\n        <button onClick={onSocialClick} name='github' className='authBtn'>Continue with Github <FontAwesomeIcon icon={faGithub} /></button>\n      </div>\n    </div>\n  )\n}\n\nexport default Auth\n","import { faPencilAlt, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { dbService, storageService } from \"firebase.config\";\nimport { useState } from \"react\";\n\n\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\n\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"삭제하시겠습니까?\");\n    if (ok) {\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\n      if (nweetObj.attachmentUrl !== '') {\n        await storageService.refFromURL(nweetObj.attachmentUrl).delete()\n      }\n    }\n  };\n\n  const toggleEditing = () => setEditing((prev) => !prev);\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event\n    setNewNweet(value)\n  }\n\n  const onSubmit = async (event) => {\n    event.preventDefault()\n    await dbService.doc(`nweets/${nweetObj.id}`).update({ text: newNweet })\n    setEditing(false)\n  }\n\n  return (\n    <div className='nweet'>\n      {editing ? (\n        <>\n          <form onSubmit={onSubmit} className='container nweetEdit'>\n            <input\n              onChange={onChange}\n              value={newNweet}\n              required\n              placeholder='Edit your nweet'\n              autoFocus\n              className='formInput'\n            />\n            <input type='submit' value='Update Nweet' className='formBtn' />\n          </form>\n          <button onClick={toggleEditing} className='formBtn cancelBtn'>\n            Cancel\n          </button>\n        </>\n      ) : (\n        <>\n          <h4>{nweetObj.text}</h4>\n          {nweetObj.attachmentUrl && (\n            <img src={nweetObj.attachmentUrl} width='50px' height='50px' />\n          )}\n          {isOwner && (\n            <div className='nweet__actions'>\n              <span onClick={onDeleteClick}>\n                <FontAwesomeIcon icon={faTrash} />\n              </span>\n              <span onClick={toggleEditing}>\n                <FontAwesomeIcon icon={faPencilAlt} />\n              </span>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Nweet;\n","import { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { dbService, storageService } from \"firebase.config\";\nimport { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\n\n\nconst NweetFactory = ({ userObj }) => {\n    const [nweet, setNweet] = useState(\"\");\n    const [attachment, setAttachment] = useState(\"\");\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        if (nweet === '') {\n            return;\n        }\n        let attachmentUrl = ''\n        if (attachment !== '') {\n            const attachmentRef = storageService\n                .ref()\n                .child(`${userObj.uid}/${uuidv4()}`)\n            const response = await attachmentRef.putString(attachment, 'data_url')\n            attachmentUrl = await response.ref.getDownloadURL()\n        }\n\n        await dbService.collection(\"nweets\").add({\n            text: nweet,\n            createdAt: Date.now(),\n            creatorId: userObj.uid,\n            attachmentUrl\n        });\n        setNweet(\"\");\n        setAttachment(\"\");\n    };\n\n    const onChange = (event) => {\n        event.preventDefault();\n        const {\n            target: { value },\n        } = event;\n        setNweet(value);\n    };\n\n    const onFileChange = (event) => {\n        const {\n            target: { files },\n        } = event;\n        const theFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => {\n            const {\n                currentTarget: { result },\n            } = finishedEvent;\n            setAttachment(result)\n        };\n        if (Boolean(theFile)) {\n            reader.readAsDataURL(theFile)\n        }\n        reader.readAsDataURL(theFile);\n    };\n\n    const onClearAttachment = () => setAttachment('')\n\n    return (\n        <form onSubmit={onSubmit} className='factoryForm'>\n            <div className='factoryInput__container'>\n                <input\n                    className='factoryInput__input'\n                    value={nweet}\n                    onChange={onChange}\n                    type='text'\n                    placeholder=\"What's on your mind?\"\n                    maxLength={120}\n                />\n                <input type='submit' value='&rarr;' className='factoryInput__arrow' />\n            </div>\n            <label for='attach-file' className='factoryInput__label'>\n                <span>Add photos</span>\n                <FontAwesomeIcon icon={faPlus} />\n            </label>\n            <input\n                id='attach-file'\n                type='file'\n                accept='image/*'\n                onChange={onFileChange}\n                style={{\n                    opacity: 0,\n                }}\n            />\n            {attachment && (\n                <div className='factoryForm__attachment'>\n                    <img\n                        src={attachment}\n                        style={{\n                            backgroundImage: attachment,\n                        }}\n                    />\n                    <div className='factoryForm__clear' onClick={onClearAttachment}>\n                        <span>Remove</span>\n                        <FontAwesomeIcon icon={faTimes} />\n                    </div>\n                </div>)}\n        </form>\n    )\n}\n\nexport default NweetFactory","import React, { useEffect, useState } from \"react\";\nimport { dbService } from \"firebase.config\";\nimport Nweet from \"components/Nweet\";\nimport NweetFactory from \"components/NweetFactory\";\n\nconst Home = ({ userObj }) => {\n\n  const [nweetList, setNweetList] = useState([]);\n\n  useEffect(() => {\n    dbService\n      .collection(\"nweets\")\n      .orderBy('createdAt', 'desc')\n      .onSnapshot((snapshot) => {\n        const newArray = snapshot.docs.map((document) => ({\n          id: document.id,\n          ...document.data(),\n        }));\n        setNweetList(newArray);\n      });\n  }, []);\n\n  return (\n    <div className='container'>\n      <NweetFactory userObj={userObj} />\n      <div style={{ marginTop: 30 }}>\n        {nweetList.map((nweet) => (\n          <Nweet\n            key={nweet.id}\n            nweetObj={nweet}\n            isOwner={nweet.creatorId === userObj.uid}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useState, useEffect } from 'react'\nimport { authService, dbService } from 'firebase.config'\nimport { useHistory } from 'react-router'\n\nconst Profile = ({ userObj, refreshUser }) => {\n  const history = useHistory()\n  const [newDisplayName, setNewDisplayName] = useState(userObj.newDisplayName)\n\n  const onLogOutClick = () => {\n    authService.signOut()\n    history.push('/')\n  }\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event\n    setNewDisplayName(value)\n  }\n\n  const onSubmit = async (event) => {\n    event.preventDefault()\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({ displayName: newDisplayName })\n      refreshUser()\n    }\n  }\n\n  return (\n    <div className='container'>\n      <form onSubmit={onSubmit} className='profileForm'>\n        <input\n          onChange={onChange}\n          type='text'\n          placeholder='Display name'\n          value={newDisplayName}\n          autoFocus\n          className='formInput'\n        />\n        <input\n          type='submit'\n          value='Update Profile'\n          className='formBtn'\n          style={{\n            marginTop: 10,\n          }}\n        />\n      </form>\n      <span className='formBtn cancelBtn logOut' onClick={onLogOutClick}>\n        Log Out\n      </span>\n    </div>\n  )\n}\n\nexport default Profile\n","import { faTwitter } from '@fortawesome/free-brands-svg-icons'\nimport { faUser } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { Link } from 'react-router-dom'\n\nconst Navigation = ({ userObj }) => {\n    return (\n        <nav>\n            <ul style={{ display: 'flex', justifyContent: 'center', marginTop: 50 }}>\n                <li>\n                    <Link to='/' style={{ marginRight: 10 }}><FontAwesomeIcon icon={faTwitter} color={'#04AAFF'} size='2x' /></Link>\n                </li>\n                <li>\n                    <Link to='/profile'\n                        style={{\n                            marginLeft: 10,\n                            display: 'flex',\n                            flexDirection: 'column',\n                            alignItems: 'center',\n                            fontSize: 12,\n                        }}\n                    >\n                        <FontAwesomeIcon icon={faUser} color={'#04AAFF'} size='2x' />\n                        <span style={{ marginTop: 10 }}>\n                            {userObj.displayName\n                                ? `${userObj.displayName}의 Profile`\n                                : 'Profile'\n                            }\n                        </span>\n\n                    </Link>\n                </li>\n            </ul>\n        </nav>\n    )\n}\n\nexport default Navigation\n","import { HashRouter as Router, Route, Switch } from 'react-router-dom'\nimport Auth from 'routes/Auth'\nimport Home from 'routes/Home'\nimport Profile from '../routes/Profile'\nimport Navigation from './Navigation'\n\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\n    return (\n        <Router>\n            {isLoggedIn && <Navigation userObj={userObj} />}\n            <Switch>\n                {\n                    isLoggedIn ? (\n                        <div\n                            style={{\n                                maxWidth: 890,\n                                width: '100%',\n                                margin: '0 auto',\n                                marginTop: 80,\n                                display: 'flex',\n                                justifyContent: 'center',\n                            }}\n                        >\n                            <Route exact path='/'>\n                                <Home userObj={userObj} />\n                            </Route>\n                            <Route exact path='/profile'>\n                                <Profile refreshUser={refreshUser} userObj={userObj} />\n                            </Route>\n                        </div>\n                    ) : (\n                        <Route exact path='/'>\n                            <Auth />\n                        </Route>\n                    )\n                }\n            </Switch>\n        </Router>\n    )\n}\n\nexport default AppRouter\n","import { useEffect, useState } from 'react'\nimport AppRouter from 'components/Router'\nimport { authService } from 'firebase.config'\n\n\nfunction App() {\n  const [init, setInit] = useState(false)\n  const [userObj, setUserObj] = useState(null)\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          uid: user.uid,\n          displayName: user.displayName,\n          updateProfile: (args) => user.updateProfile(args)\n        })\n      } else {\n        setUserObj(false)\n      }\n      setInit(true)\n    })\n  }, [])\n\n  const refreshUser = () => {\n    const user = authService.currentUser\n    setUserObj({\n      uid: user.uid,\n      displayName: user.displayName,\n      updateProfile: (args) => user.updateProfile(args)\n    })\n  }\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        'initializing...'\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}